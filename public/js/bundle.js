"use strict";angular.module("sampleApp",["ui.router","appRoutes","MainCtrl","TravelerCtrl","SearchTravelerCtrl","FormGenCtrl.js","TravelerService","FormService"]),angular.module("appRoutes",["ui.router"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,r,t){r.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"views/home.html",controller:"MainController"}).state("traveler",{url:"/traveler?_id&formId",views:{"":{templateUrl:"views/traveler.html",controller:"TravelerController"},"formReview@traveler":{templateUrl:"views/formReview.html",controller:["$scope","Traveler","Form",function(e,r,t){e.reviewData=r.getReviewData(),t.get(e.reviewData.formId).success(function(r){e.forms=r})}]}}}).state("searchTraveler",{url:"/searchTraveler",templateUrl:"views/searchTraveler.html",controller:"SearchTravelerController"}).state("formGenerator",{url:"/formGenerator",templateUrl:"views/formGenerator.html",controller:"FormGeneratorController"}),t.html5Mode(!0)}]),angular.module("FormGenCtrl.js",[]).controller("FormGeneratorController",["$scope","Form",function(e,r){e.submit=function(){var t=prompt("password");"123"===t?r.create(e.template).success(function(e){alert("add")}):alert("go home son")}}]),angular.module("MainCtrl",[]).controller("MainController",["$scope",function(e){e.tagline="to the moon and back!"}]),angular.module("SearchTravelerCtrl",[]).controller("SearchTravelerController",["$scope","Traveler",function(e,r){e.isSearch=!1,e.search=function(){if(e.currentInput=e.searchInput,e.isSearch=!0,e.searchInput){var t=e.searchInput.toString();r.searchLike(t).success(function(r){e.result=r})}},e.editTraveler=function(e,r){window.open("traveler?_id="+e+"&formId="+r,"_blank")},e.removeTraveler=function(t,a){r.removeTraveler(t).success(function(r){e.result.splice(a,1)})}}]),angular.module("TravelerCtrl",[]).controller("TravelerController",["$scope","Traveler","Form","$stateParams",function(e,r,t,a){e.updateForm=function(){e.travelerData={},e.formId&&t.get(e.formId).success(function(r){e.forms=r,e.lastStep=r.steps.length,e.travelerData.formId=r.formId})},e.nextStep=function(){var t=e.forms.steps[e.currentStep-1];t.list.length>=e.currentSubStep+1?e.currentSubStep+=1:(e.currentStep+=1,e.currentSubStep=1,e.currentStep>e.lastStep&&(r.setReviewData(e.travelerData),e.readySubmit=!0))},e.statusPage=function(r){e.currentStep=r,e.currentSubStep=1,e.readySubmit=!1},e.statusSubPage=function(r){e.currentSubStep=r},e.goBack=function(){e.currentStep=1,e.currentSubStep=1,e.readySubmit=!1},e.save=function(){e.travelerData.created?r.save(e.travelerData).success(function(e){}):e.submit()},e.submit=function(){document.getElementById("username").value?(e.travelerData.created=!0,e.travelerData.createdBy=document.getElementById("username").value,e.travelerData.createAt=new Date,r.create(e.travelerData).success(function(r){console.log(r),e.travelerData=r})):alert("enter you name plz")},e["new"]=function(){l()},e["delete"]=function(){alert("delete click"),e.travelerData._id&&r.removeTraveler(e.travelerData._id).success(function(e){l()})};var n=function(){var r=document.getElementById("username").value;if(""!==r){var t=e.currentStep,a=e.currentSubStep;return e.travelerData.step[t][a].editBy=r,e.travelerData.step[t][a].editTime=new Date,!0}return alert("enter your name"),!1},o=function(){t.getFormList().success(function(r){e.formList=r})},l=function(){e.travelerData={},e.currentStep=1,e.currentSubStep=1,e.readySubmit=!1,e.formId="",e.isNew=!0},u=function(){e.$watch("travelerData.step",function(r,t){e.isNew?(console.log(e.currentStep+";"+e.currentSubStep+"changed"),n()):e.isNew=!0},!0)},c=function(){l(),o(),a.formId&&(e.formId=a.formId,e.updateForm(),e.isNew=!1),a._id&&(e.isNew=!1,r.get(a._id).success(function(r){e.travelerData=r})),u()};c()}]),angular.module("FormService",[]).factory("Form",["$http",function(e){return{create:function(r){return e.post("/api/forms",r)},getFormList:function(){return e.get("/api/forms/")},get:function(r){return e.get("/api/forms/"+r)}}}]),angular.module("TravelerService",[]).factory("Traveler",["$http",function(e){var r={};return{create:function(r){return e.post("/api/traveler",r)},getReviewData:function(){return r},get:function(r){return e.get("/api/traveler?_id="+r)},save:function(r){return e.put("/api/traveler",r)},setReviewData:function(e){r=e},searchLike:function(r){return e.get("/api/traveler/searchLike/"+r)},removeTraveler:function(r,t){return console.log(r),e["delete"]("/api/traveler/"+r)}}}]);
//# sourceMappingURL=data:application/json;base64,
